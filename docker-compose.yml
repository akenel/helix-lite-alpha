# Docker docker-compose.yml
# and dynmaic yaml from traefik /home/angel/repos/helix-lite-alpha/traefik/dynamic/dynamic.yml

services:
  # 🧭 Traefik - Edge Router & Reverse Proxy
  traefik:
    image: traefik:v3.5.2
    container_name: traefik
    profiles:
      - core
    command:
      - "--api.dashboard=true"
      - "--providers.docker=false"           # 🚫 disable docker provider
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      - ./traefik/certs:/etc/traefik/certs:ro
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    networks:
      - helix_net
  # 🚀 n8n Automation Platform
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    user: "1000:1000"   # 👈 force container to match host 
    profiles:
      - core
    expose:
      - "5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npass
      - DB_POSTGRESDB_DATABASE=n8ndb
    volumes:
      - ./data/n8n:/home/node/.n8n
    networks:
      - helix_net

  # 🗄️ Postgres Database
  postgres:
    image: postgres:15
    container_name: postgres
    profiles:
      - core    
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8npass
      - POSTGRES_DB=n8ndb
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - helix_net

  # 📊 Grafana - Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "0:0"
    profiles:
      - core
    expose:
      - "3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      - helix_net

  # 📈 Prometheus - Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    profiles:
      - core
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./data/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    networks:
      - helix_net
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ./data/ollama:/root/.ollama   # persist models & configs
    ports:
      - "11434:11434"   # Ollama API
    networks:
      - helix_net

  # 📧 MailHog - Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    profiles:
      - core
    expose:
      - "8025"
    networks:
      - helix_net

  # 🐘 PgAdmin - Postgres UI
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    profiles:
      - core
    expose:
      - "80" # 👈 Corrected port
    ports:
      - "5050:80" # 👈 Corrected mapping to container's port 80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@helix.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - helix_net

  # 👥 Keycloak - Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    profiles:
      - core
    command: ["start-dev"]
    ports:
      - "8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    networks:
      - helix_net

  # 🔐 Vault - Secret Management
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    profiles:
      - core
    expose:
      - "8200"
    networks:
      - helix_net

  # 🗂️ MinIO - Object Storage
  minio:
    image: minio/minio:latest
    container_name: minio
    profiles:
      - core
    command: server /data --console-address ":9001"
    ports:
      - "9000" # API
      - "9001" # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./data/minio:/data
    networks:
      - helix_net

  # 🌐 OpenWebUI
  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    profiles:
      - core
    ports:
      - "3001"
    environment:
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - CORS_ALLOW_ORIGIN=https://openwebui.helix.local
    networks:
      - helix_net
   # 📂 FileBrowser
  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    profiles:
      - core
    expose:
      - "80" # 👈 Corrected port
    ports:
      - "8082:80" # 👈 Corrected mapping to container's port 80
    volumes:
      - ./data/files:/srv
    networks:
      - helix_net

  # 📚 Moodle (LMS)
  moodle:
    image: bitnami/moodle:latest
    container_name: moodle
    profiles:
      - lms
    ports:
      - "80"
    networks:
      - helix_net

  # 🗄️ Adminer
  adminer:
    image: adminer:latest
    container_name: adminer
    profiles:
      - core
    expose:
      - "8080" # 👈 This was already correct
    ports:
      - "8083:8080" # 👈 This was already correct
    networks:
      - helix_net

  # 🛒 Medusa (E-commerce)
  medusa:
    image: medusajs/medusa:latest
    container_name: medusa
    profiles:
      - lms
    ports:
      - "8081"
    networks:
      - helix_net

  # ⚓ Portainer - Container Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    profiles:
      - core
    expose:
      - "9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    networks:
      - helix_net

networks:
  helix_net:
    driver: bridge
