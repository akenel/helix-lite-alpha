# Define TLS certificates for secure connections
tls:
  certificates:
    - certFile: "/etc/traefik/certs/helix-local.crt"
      keyFile: "/etc/traefik/certs/helix-local.key"
      tls: {}

# Define HTTP routers and services
http:
  routers:
    filebrowser:
      rule: "Host(`filebrowser.helix.local`)"
      service: filebrowser
      entryPoints:
        - websecure
      tls: {}
    grafana:
      rule: "Host(`grafana.helix.local`)"
      service: grafana
      entryPoints:
        - websecure
      tls: {}
    kafka-ui:
      rule: "Host(`kafka-ui.helix.local`)"
      service: kafka-ui
      entryPoints:
        - websecure
      tls: {}
    mailhog:
      rule: "Host(`mailhog.helix.local`)"
      service: mailhog
      entryPoints:
        - websecure
      tls: {}
    pgadmin:
      rule: "Host(`pgadmin.helix.local`)"
      service: pgadmin
      entryPoints:
        - websecure
      tls: {}
    phpmyadmin:
      rule: "Host(`phpmyadmin.helix.local`)"
      service: phpmyadmin
      entryPoints:
        - websecure
      tls: {}
    redis:
      rule: "Host(`redis.helix.local`)"
      service: redis
      entryPoints:
        - websecure
      tls: {}
    n8n:
      rule: "Host(`n8n.helix.local`)"
      service: n8n
      entryPoints:
        - websecure
      tls: {}
    keycloak:
      rule: "Host(`keycloak.helix.local`)"
      service: keycloak
      entryPoints:
        - websecure
      tls: {}
    vault:
      rule: "Host(`vault.helix.local`)"
      service: vault
      entryPoints:
        - websecure
      tls: {}
    minio:
      rule: "Host(`minio.helix.local`)"
      service: minio
      entryPoints:
        - websecure
      tls: {}

    prometheus:
      rule: "Host(`prometheus.helix.local`)"
      service: prometheus
      entryPoints:
        - websecure
      tls: {}
    moodle:
      rule: "Host(`moodle.helix.local`)"
      service: moodle
      entryPoints:
        - websecure
      tls: {}
    adminer:
      rule: "Host(`adminer.helix.local`)"
      service: adminer
      entryPoints:
        - websecure
      tls: {}
    kong:
      rule: "Host(`kong.helix.local`)"
      service: kong
      entryPoints:  
        - websecure
      tls: {}     

    medusa:
      rule: "Host(`medusa.helix.local`)"
      service: medusa
      entryPoints:  
        - websecure
      tls: {}     
    minecraft:
      rule: "Host(`minecraft.helix.local`)"
      service: minecraft
      entryPoints:  
        - websecure
      tls: {}     
    portainer:
      rule: "Host(`portainer.helix.local`)"
      service: portainer
      entryPoints:  
        - websecure
      tls: {}
      
  services:
    keycloak:
      loadBalancer:
        servers:
          - url: "http://keycloak:8080"
    kafka-ui:
      loadBalancer:
        servers:
          - url: "http://kafka-ui:8080"
    mailhog:
      loadBalancer:
        servers:
          - url: "http://mailhog:8025"
    pgadmin:
      loadBalancer:
        servers:
          - url: "http://pgadmin:80" # Assuming pgadmin uses 80
    phpmyadmin:
      loadBalancer:
        servers:
          - url: "http://phpmyadmin:80" # Assuming phpmyadmin uses 80
    redis:
      loadBalancer:
        servers:
          - url: "http://redis:6379"
    vault:
      loadBalancer:
        servers:
          - url: "http://vault:8200"
    minio:
      loadBalancer:
        servers:
          - url: "http://minio:9000"
    n8n:
      loadBalancer:
        servers:
          - url: "http://n8n:5678"
    filebrowser:
      loadBalancer:
        servers:
          - url: "http://filebrowser:8082"
    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"

    prometheus:
      loadBalancer:
        servers:
          - url: "http://prometheus:9090"
    moodle:
      loadBalancer:
        servers:
          - url: "http://moodle:9002"
    adminer:
      loadBalancer:
        servers:
          - url: "http://adminer:8083"
    kong:
      loadBalancer:
        servers:
          - url: "http://kong:8001"
    medusa:
      loadBalancer:
        servers:      
          - url: "http://medusa:8081"
    minecraft:
      loadBalancer:
        servers:      
          - url: "http://minecraft:25565"
    portainer:
      loadBalancer:
        servers:      
          - url: "http://portainer:9000"  